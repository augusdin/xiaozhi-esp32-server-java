name: Deploy to Remote Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Mirror FunASR image to GHCR (once per tag)
      run: |
        set -euo pipefail
        SRC=registry.cn-hangzhou.aliyuncs.com/funasr_repo/funasr:funasr-runtime-sdk-online-cpu-0.1.12
        DST=ghcr.io/${{ github.repository_owner }}/funasr:funasr-runtime-sdk-online-cpu-0.1.12
        echo "Pulling $SRC ..."
        docker pull "$SRC"
        echo "Tagging to $DST ..."
        docker tag "$SRC" "$DST"
        echo "Pushing $DST ..."
        docker push "$DST"

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix=sha-

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile-server
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Deploy to remote server
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.HOST_USER }}
        password: ${{ secrets.HOST_PASSWORD }}
        script: |
          # Create deployment directory
          mkdir -p /opt/xiaozhi-deployment
          cd /opt/xiaozhi-deployment
          
          # Clone or update repository
          if [ -d "xiaozhi-esp32-server-java" ]; then
            cd xiaozhi-esp32-server-java
            git pull origin main
          else
            git clone https://github.com/augusdin/xiaozhi-esp32-server-java.git
            cd xiaozhi-esp32-server-java
          fi
          
          # Stop existing services
          docker-compose down 2>/dev/null || true
          
          # Pull latest images and start services
          # 先预拉取 FunASR（GHCR），避免首次 up 阶段等待
          docker-compose pull funasr || true
          VOSK_MODEL_SIZE=small docker-compose up -d --build
          
          # Wait for services to be ready
          sleep 60
          
          # Show service status
          docker-compose ps
          
          # Show logs for verification
          docker-compose logs --tail=20
